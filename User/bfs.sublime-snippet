<snippet>
	<content><![CDATA[
const int MAXN=1e5+5;
#define pb push_back

int n,m,parent[MAXN],dist[MAXN];
vector<int> adj[MAXN];

void solve(){
	cin>>n>>m;
	for(int i=0;i<m;i++){
		int u,v;
		cin>>u>>v;
		adj[u].pb(v);
		adj[v].pb(u);
	}
	for(int i=0;i<=n;i++) {
		parent[i]=i;
		dist[i]=-1;
	}
	queue<int> q;
	q.push(1);
	dist[1]=0;
	while(!q.empty()){
		int u = q.front();
		q.pop();
		for(auto x: adj[u]){
			if(parent[x]==x && x!=1){
				dist[x]=dist[u]+1;
				parent[x]=u;
				q.push(x);
			}
		}
	}
	if(dist[n]==-1) {
		cout<<"IMPOSSIBLE"<<endl;
		return;
	}
	int x=n;
	vector<int> ans;
	while(x!=1){
		ans.pb(x);
		x=parent[x];
	}
	ans.pb(x);
	reverse(ans.begin(), ans.end());
	cout<<dist[n]+1<<"\n";
	for(auto x: ans) cout<<x<<" ";
	cout<<"\n";
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>bfs</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
