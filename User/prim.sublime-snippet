<snippet>
	<content><![CDATA[
#define pb push_back
const int MAXN = 1e5+6;

int n,m,visited[MAXN];
vector<array<int,2>> adj[MAXN];

void prim(int start=1){
	int cost=0;
	priority_queue<array<int,2>,vector<array<int,2>>,greater<array<int,2>> > pq;
	visited[start]=true;
	for(auto [w,v] :  adj[start]){
		pq.push({w,v});
	}
	while(!pq.empty()){
		auto [w,v] = pq.top();
		pq.pop();
		if(!visited[v]){
			cost+=w;
			visited[v]=true;
			for(auto [e,u]:adj[v]){
				if(!visited[u]) pq.push({e,u});
			}
		}
	}

	for (int i = 1; i <= n; i++) {
        if (!visited[i]) {
            cout << "IMPOSSIBLE\n";
            exit(0);
        }
    }
    cout << cost << "\n";

}

void solve(){
	cin>>n>>m;
	for(int i=0;i<m;i++){
		int u,v,w;
		cin>>u>>v>>w;
		adj[u].push_back({w,v});
		adj[v].push_back({w,u});
	}
	prim();

}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>prim</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
