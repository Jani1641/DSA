#include<bits/stdc++.h>
using namespace std;

template<typename... T>
void see(T&... args) { ((cin >> args), ...);}
template<typename... T>
void put(T&&... args) { ((cout << args << " "), ...);}
template<typename... T>
void putl(T&&... args) { ((cout << args << " "), ...); cout<<'\n';}
#define seea(a,x,y) for(int i=x;i<y;i++){cin>>a[i];}
#define inputv(v,n) for(int i=0;i<n;i++){int x; cin>>x; v.push_back(x);}
#define outputv(v,n) for(int i=0;i<n;i++){cout<<v[i]<<" ";}cout<<"\n";
#define sees(s,n) for(int i=0;i<n;i++){int x; cin>>x; s.insert(x);}
#define all(x) x.begin(),x.end()
#define rep(i,a,b) for (int i=a; i<b; ++i)
#define rev(i,a,b) for (int i=a; i>b; --i)
#define pb push_back
#define ar array
#define sz size
#define rsz resize
typedef long long int ll;
typedef pair<int,int> pi;
typedef pair<int,ll> pl;
typedef vector<int> vi;
typedef vector<ll> vl;
const int MAXN=2e5+5;
const ll INF = LLONG_MAX;
const int MOD=1e9+7;

// int helper(vector<pair<int,int>> &food,pair<int,int> &home,int mask,int n,pair<int,int> present,vector<vector<int>> &dp){
//     // putl(present.first,present.second,"jani",mask,(1<<(n))-1);
//     int u=present.first,v=present.second;
//     if(mask==((1<<(n))-1)){
//         int ans= abs(u-home.first)+abs(v-home.second); 
//         // putl(present.first,present.second,ans,"jani");
//         return ans;
//     }
//     if(dp[mask][u*4+v]!=-1) return dp[mask][u*4+v];
//     int x=1e9;
//     for(int i=0;i<n;i++){
//         if((!((1<<i)&mask))) x=min(x,helper(food,home,mask|(1<<i),n,food[i],dp)+abs(food[i].first-present.first)+abs(food[i].second-present.second));
//     }
//     // putl(present.first,present.second,"jani",x);
//     return dp[mask][u*4+v]=x;
// }



void solve(){
    vector<string> grid ={
        "FOOF","FOOO","ODOH","FOOO"
    };
    vector<pair<int,int>> food;
    pair<int,int> home,dog;
    for(int i=0;i<4;i++){
        for(int j=0;j<4;j++){
            if(grid[i][j]=='F') food.push_back({i,j});
            else if (grid[i][j]=='H') home={i,j};
            else if(grid[i][j]=='D') dog={i,j};
            else continue;
        }
    }
    food.push_back(dog);
    int n=food.size();
    // rep(i,0,n) cout<<food[i].first<<" "<<food[i].second<<endl;
    vector<vector<int>>dp((1<<n),vector<int>(n*n,-1));
    int ans=helper(food,home,1<<(n-1),n,dog,dp);
    putl(ans,"final");
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int t=1;
    while(t--){
        solve();
    }
    return 0;
}




#include<bits/stdc++.h>
using namespace std;


bool checker(string present,string old){
	if(present.length()<old.length()) return false;
	else if(present.length()> old.length()) return true;
	else {
		int n=present.length();
		for(int i=0;i<n;i++){
			if((present[i]-'0')>(old[i]-'0')) return true;
			else if((present[i]-'0')<(old[i]-'0')) return false;
			else continue;
		}
		return false;
	}
}
void recurse(string year,string present,int i,long &ans,int n){
	if(i==n) {
		ans++;
	}
	int j=i;
	while(j<n){
		string sub = year.substr(i,j-i+1);
		if(checker(sub,present)){
			if((j+1<n)&&(year[j+1]=='0')){
				j++;continue;
			}
			recurse(year,sub,j+1,ans,n);
		}
		j++;
	}
}

void solve(){
	string year="20152016";
	long ans=0;
	int n=year.length();
	recurse(year,"",0,ans,n);
	cout<<ans<<endl;
}

int main(){
	int t=1;
	while(t--) solve();
	return 0;
}
